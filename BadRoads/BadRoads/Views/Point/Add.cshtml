@if (Model != null && Model.Count > 0)
{
    foreach (var item in Model)                   //создаю неотображаемые элементы для передачи через них данных в скрипт JS
    {
        <p data-latitude="@item.GeoData.Latitude" data-longitude="@item.GeoData.Longitude" data-adress="@item.GeoData.FullAddress" data-id="@item.ID" class="points"></p>
    }
}
<p id="stringforMap" data-str="@ViewBag.MarkerLocation"></p>
<div class="section group">
    <div class="col span_2_of_3">
        <h1 class="center_text">Укажите дефект на карте</h1>
        <div id="map"></div>
    </div>   
    <div class="col span_1_of_3">
       @using (Html.BeginForm("Add", "Point", FormMethod.Post,
           new { enctype = "multipart/form-data" }))
       {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <h1 class=" center_text">Добавить информацию о дефекте на дороге</h1>
            <label class="f t">Адрес:</label>
            <input name="adresset" id="adresset" class="f" type="text" readonly />              @*адрес точки*@
            <label class="f t">Координаты:</label>
            <input name="latitude" id="latitude" class="f-2" type="text" readonly />            @*координаты - широта*@
            <input name="longitude" id="longitude" class="f-2" type="text" readonly />           @*координаты  - долгота*@
            <label class="f t">Выберите фото для загрузки (файл не более 3мб):</label>
            <input name="upload" class="f" type="file" multiple id="upload_files"/><span id="clear_files">X</span>
            <label class="f t">Выберите проблему:</label>
            <select name="DefName" class="sel f">
                    @foreach (var item in ViewBag.Problems)
                    {
                        <option>@item</option>
                    }
            </select>
            <label class="f t">Дополнительное описание:</label>
            <textarea class="f ht" name="FirstComment"></textarea> @* 7,04,15 - Малый Дмитрий, Изменил textarea на "CKEditor"*@
           
           
            <script type="text/javascript">
                // очистка поля с файлами   Резник К.
                var inputFiles = $("input[type='file']");
                $("#clear_files").on("click", function () {
                    inputFiles.wrap('<form>').parent('form').trigger('reset');
                    inputFiles.unwrap();
                });
                // функции валидации файлов по типу  Резник К.
                function IsNotValidType(el) {
                    var element = el;
                    var allowTypes = ["jpg", "jpeg"];
                    var currentType = "";
                    var res = true;
                    if (element.files == undefined || element.files.length == 0) {
                        return false;
                    }
                    for (var i = 0; i < element.files.length; i++) {
                        if (element.files[i].name.lastIndexOf(".") != -1) {
                            currentType = element.files[i].name.substring(element.files[i].name.lastIndexOf(".") + 1);
                            var res = allowTypes.indexOf(currentType);
                            res = allowTypes.indexOf(currentType) == -1?false:true;
                        }
                    }
                    return res;
                }
                // функция валидации файлов по размеру  Резник К.
                function IsNotValidSize(el) {
                    var element = el;
                    var res = true;
                    var allowSize = 1048576*3;                          //  3 Мб максимальный размер картинки
                    if (element.files == undefined || element.files.length == 0) {
                        return false;
                    }
                    for (var i = 0; i < element.files.length; i++) {
                        var size = element.files[i].size;
                        res = allowSize <= size ? false : true;
                    }
                    return res;
                }

                // функция валидации описания  Коноваленко А.
                function pointValidate(e) {
                    if (CKEDITOR.instances.FirstComment.getData() == "" || CKEDITOR.instances.FirstComment.getData() == undefined) {
                        alert("Необходимо ввести описание!");
                        //e.preventDefault();
                        //event.returnValue = false;
                        return false;
                    }
                    return true;
                }

                $("form").submit(function (ev) {
                    var inputFiles = document.getElementById("upload_files");
                    var isValidTypeSize = IsNotValidSize(inputFiles) && IsNotValidType(inputFiles);
                    var isDescriptionEmpty = $("textarea[name='FirstComment']").val()==""?false:true;
                    var res = isValidTypeSize && isDescriptionEmpty;
                    if (!isValidTypeSize)
                    {
                        $("input[type='file']").css("border", "1px red solid");
                    }
                    return res?true:false;
                });
            </script>
           
            <div class="center_block vis">
                <input id="subm" type="submit" value="Отправить" />
                <p>
                    @Html.ActionLink("Назад в галерею", "Gallery", "Point")
                </p>
            </div>
       }
    </div>   
</div>

@section Scripts {
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&sensor=false&language=uk"></script>                                          @*подключение Google Maps API*@
    <script src="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/src/markerclusterer.js"></script>       @*подключение скрипта для кластеризации маркеров*@
    @Scripts.Render("~/Scripts/addpoint.js")
}  